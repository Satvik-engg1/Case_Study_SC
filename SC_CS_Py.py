# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1S3PJQaY1ZOZ7rqbmWAqK_j42sT_AjMkp
"""

import io
import pandas as pd
import numpy as np
from google.colab import files
from copy import deepcopy

import matplotlib.pyplot as plt
import seaborn as sns
import plotly.express as px

uploaded =files.upload()

isl_df=pd.read_csv(io.BytesIO(uploaded['isl_player_final.csv']))
isl_df

isl_df.info()

isl_df.describe()

isl_df.describe().round(1)

isl_df[(isl_df["minutes_played"]>1500) & (isl_df["country_id"]==1)].shape

isl_df[(isl_df["country_id"]==1) & (isl_df["position_id"]==2)]

indian_forwards=deepcopy(isl_df[(isl_df["country_id"]==1) & (isl_df["position_id"]==2)])

indian_forwards.reset_index(drop=True, inplace=True)

indian_forwards[indian_forwards["name"].str.contains("Sunil")]

#LEVELING THE PLAYING FIELD

fwd_mins_df = indian_forwards.groupby(["id", "name"])["minutes_played"].sum().reset_index()

px.bar(x="name", y="minutes_played", text="minutes_played", data_frame=fwd_mins_df)

indian_forwards["goalsPer90"] = indian_forwards["events.goals"].divide(indian_forwards["minutes_played"]).multiply(90)

indian_forwards = indian_forwards[indian_forwards["minutes_played"] > 0]

per90Cols = ["events.goals", "events.assists", "events.shots", "events.shots_on_target", "events.chances_created",
             "events.fouls_suffered", "touches.total", 'touches.aerial_duel.won']
for col in per90Cols:
    indian_forwards[col + "Per90"] = indian_forwards[col].divide(indian_forwards["minutes_played"]).multiply(90)

cols_for_radar = []
for i in per90Cols:
    cols_for_radar.append(i + "Per90")
print(cols_for_radar)

# Use list comprehension
[i + "Per90" for i in per90Cols]

cols_for_radar = [i + "Per90" for i in per90Cols]
print(cols_for_radar)

indian_forwards.loc[(indian_forwards["id"] == 19150), cols_for_radar].sum()

# ANALYZING CHETRI USING RADAR PLOTS

fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards["id"] == 19150), cols_for_radar].sum(),
                    theta=cols_for_radar, line_close=True)
fig.update_traces(fill='toself')
fig.show()

# NORMALIZATON OF VALUES

from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
indian_forwards[cols_for_radar] = scaler.fit_transform(indian_forwards[cols_for_radar])

indian_forwards.head()

indian_forwards[cols_for_radar].min()

indian_forwards[cols_for_radar].max()

# NORMALIZED RADAR PLOT

fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards["id"] == 19150), cols_for_radar].sum(),
                    theta=cols_for_radar, line_close=True)
fig.update_traces(fill='toself')
fig.show()

for i, row in indian_forwards.iterrows():
    print("Index location -->", i, "\n")
    print(row.values, "\n")

fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards["id"] == 19150), cols_for_radar].sum(),
                    theta=cols_for_radar, line_close=True)
fig.update_traces(fill='toself')
fig.show()

for i, row in indian_forwards.iterrows():
    print(row["name"])
    fig = px.line_polar(indian_forwards, r=indian_forwards.loc[(indian_forwards["id"] == row["id"]), cols_for_radar].sum(),
                        theta=cols_for_radar, line_close=True,
                        title=row["name"])
    fig.update_traces(fill='toself')
    fig.show()

# REPLACEMENT BY COMPARISON

ind_fwds_id_names = indian_forwards.drop_duplicates(subset=["id"])[["id", "name"]]

ind_fwds_id_names.shape

ind_fwds_id_names.head()

indian_forwards[cols_for_radar].max().max()
isl_max = indian_forwards[cols_for_radar].max().max()

import plotly.graph_objects as go

for i, row in ind_fwds_id_names.iterrows():
    if row["id"] == 19150:
        continue
    print(row["name"])
    # Initiate the plotly go figure
    fig = go.Figure()
    # Add Radar plots for different players:
    fig.add_trace(go.Scatterpolar(
        r=indian_forwards.loc[(indian_forwards["id"] == 19150), cols_for_radar].sum(),
        theta=cols_for_radar,
        fill='toself',
        name='Sunil Chhetri'))
    fig.add_trace(go.Scatterpolar(
        r=indian_forwards.loc[(indian_forwards["id"] == row["id"]), cols_for_radar].sum(),
        theta=cols_for_radar,
        fill='toself',
        name=row["name"]))
    # Additional properties for the plot:
    fig.update_layout(
        title="Sunil Chhetri vs " + row["name"],
    polar=dict(
        radialaxis=dict(
        visible=True,
        range=[0, isl_max]
        )),
    showlegend=True
    )
    fig.show()